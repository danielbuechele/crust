"use client";

import PrimaryButton from "@/components/PrimaryButton/PrimaryButton";
import { clsx } from "clsx";
import Link from "next/link";
import { useContext, useEffect, useState } from "react";
import Logo from "../Logo";
import styles from "./Menu.module.css";
import MenuContext from "./MenuContext";
import throttle from "lodash.throttle";
import { usePathname } from "next/navigation";
import Wrapper from "../Wrapper/Wrapper";
import RoundButton from "../RoundButton/RoundButton";

export type Variant = "transparent" | "white" | "light1" | "light2" | "dark";

export default function Menu() {
  const [scrolled, setScrolled] = useState(false);
  const [menuOpen, setMenuOpen] = useState(false);
  const { variant } = useContext(MenuContext);
  const isHome = usePathname() === "/";
  const isSpecs = usePathname() === "/specs";

  useEffect(() => {
    const handleScroll = throttle(() => {
      setScrolled(window.scrollY > 0);
    }, 16);
    window.addEventListener("scroll", handleScroll);
    return () => {
      window.removeEventListener("scroll", handleScroll);
    };
  }, [setScrolled]);

  return (
    <>
      <nav
        className={clsx(
          styles.container,
          styles.white && isHome && scrolled && styles[variant],
        )}
      >
        <Wrapper className={styles.wrapper}>
          <Link href="/" className={styles.logo}>
            <Logo />
          </Link>
          {(isHome || isSpecs) && (
            <a
              className={styles.instagram}
              href="https://instagram.com/crust.mill"
            >
              <svg
                width="16"
                height="16"
                viewBox="0 0 16 16"
                fill="none"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  d="M4.68673 0.0560111C3.83553 0.0961711 3.25425 0.232011 2.74609 0.431691C2.22017 0.636651 1.77441 0.911691 1.33089 1.35681C0.887373 1.80193 0.614253 2.24801 0.410733 2.77473C0.213773 3.28401 0.080333 3.86577 0.042733 4.71745C0.00513298 5.56913 -0.00318703 5.84289 0.000972972 8.01537C0.00513297 10.1878 0.014733 10.4602 0.056013 11.3136C0.096653 12.1646 0.232013 12.7458 0.431693 13.2541C0.636973 13.78 0.911693 14.2256 1.35697 14.6693C1.80225 15.113 2.24801 15.3855 2.77601 15.5893C3.28481 15.7859 3.86673 15.92 4.71825 15.9573C5.56977 15.9946 5.84385 16.0032 8.01569 15.9991C10.1875 15.9949 10.461 15.9853 11.3143 15.9448C12.1675 15.9043 12.7456 15.768 13.2541 15.5693C13.78 15.3635 14.2259 15.0893 14.6693 14.6439C15.1127 14.1984 15.3856 13.752 15.589 13.225C15.7861 12.7162 15.92 12.1343 15.957 11.2834C15.9943 10.4295 16.0031 10.1568 15.9989 7.98465C15.9947 5.81249 15.985 5.54017 15.9445 4.68705C15.904 3.83393 15.7685 3.25457 15.569 2.74593C15.3634 2.22001 15.089 1.77473 14.6439 1.33073C14.1987 0.886731 13.752 0.613931 13.2251 0.411051C12.716 0.214091 12.1344 0.0798511 11.2829 0.0430511C10.4314 0.00625113 10.1573 -0.00318888 7.98465 0.000971124C5.81201 0.00513112 5.54001 0.0144111 4.68673 0.0560111ZM4.78017 14.5181C4.00017 14.4842 3.57665 14.3546 3.29441 14.2461C2.92065 14.1021 2.65441 13.928 2.37313 13.6495C2.09185 13.3709 1.91905 13.1037 1.77313 12.7307C1.66353 12.4485 1.53153 12.0255 1.49505 11.2455C1.45537 10.4024 1.44705 10.1493 1.44241 8.01345C1.43777 5.87761 1.44593 5.62481 1.48289 4.78145C1.51617 4.00209 1.64657 3.57809 1.75489 3.29601C1.89889 2.92177 2.07233 2.65601 2.35153 2.37489C2.63073 2.09377 2.89713 1.92065 3.27041 1.77473C3.55233 1.66465 3.97537 1.53377 4.75505 1.49665C5.59873 1.45665 5.85153 1.44865 7.98705 1.44401C10.1226 1.43937 10.376 1.44737 11.22 1.48449C11.9994 1.51841 12.4235 1.64753 12.7053 1.75649C13.0792 1.90049 13.3453 2.07345 13.6264 2.35313C13.9075 2.63281 14.0808 2.89825 14.2267 3.27233C14.337 3.55345 14.4679 3.97633 14.5047 4.75649C14.5448 5.60017 14.5539 5.85313 14.5578 7.98849C14.5616 10.1239 14.5541 10.3775 14.5171 11.2205C14.4831 12.0005 14.3538 12.4242 14.2451 12.7067C14.1011 13.0803 13.9275 13.3467 13.6482 13.6277C13.3688 13.9087 13.1027 14.0818 12.7293 14.2277C12.4477 14.3376 12.0242 14.4688 11.2451 14.5059C10.4015 14.5456 10.1487 14.5539 8.01233 14.5586C5.87601 14.5632 5.62401 14.5546 4.78033 14.5181M11.3019 3.72433C11.3022 3.91421 11.3589 4.09974 11.4646 4.25744C11.5704 4.41514 11.7206 4.53794 11.8961 4.6103C12.0717 4.68265 12.2647 4.70132 12.4509 4.66395C12.6371 4.62657 12.808 4.53482 12.942 4.40031C13.076 4.26579 13.1671 4.09455 13.2038 3.90825C13.2405 3.72195 13.2212 3.52894 13.1482 3.35365C13.0751 3.17836 12.9518 3.02866 12.7937 2.92348C12.6356 2.81829 12.4499 2.76235 12.26 2.76273C12.0055 2.76324 11.7615 2.86483 11.5819 3.04515C11.4022 3.22548 11.3015 3.46978 11.3019 3.72433ZM3.89233 8.00801C3.89681 10.2768 5.73937 12.1118 8.00769 12.1075C10.276 12.1032 12.1123 10.2608 12.108 7.99201C12.1037 5.72321 10.2607 3.88769 7.99201 3.89217C5.72337 3.89665 3.88801 5.73953 3.89233 8.00801ZM5.33329 8.00513C5.33225 7.47771 5.48763 6.96181 5.77979 6.5227C6.07194 6.08358 6.48775 5.74095 6.97462 5.53815C7.4615 5.33535 7.99759 5.28148 8.51508 5.38335C9.03258 5.48522 9.50824 5.73826 9.88193 6.11047C10.2556 6.48268 10.5105 6.95734 10.6145 7.47443C10.7184 7.99151 10.6666 8.52781 10.4658 9.01548C10.2649 9.50316 9.92391 9.92032 9.48595 10.2142C9.04799 10.5081 8.53272 10.6655 8.00529 10.6666C7.65508 10.6673 7.30816 10.599 6.98433 10.4657C6.66051 10.3323 6.36612 10.1365 6.118 9.88934C5.86987 9.64219 5.67286 9.34858 5.53822 9.02529C5.40358 8.70199 5.33394 8.35534 5.33329 8.00513Z"
                  fill="currentColor"
                />
              </svg>
              Follow us for updates
            </a>
          )}
          <div className={styles.buttonsRight}>
            <PrimaryButton
              className={
                (isHome || isSpecs) && variant === "light2"
                  ? styles.buy
                  : undefined
              }
              href="/buy"
            >
              Buy
            </PrimaryButton>
            {(isHome || isSpecs) && variant === "light2" && (
              <div className={styles.mobileToggle}>
                <Link
                  className={isHome ? styles.active : undefined}
                  href="/"
                  onClick={() => setMenuOpen(false)}
                >
                  Overview
                </Link>
                <Link
                  className={isSpecs ? styles.active : undefined}
                  href="/specs"
                  onClick={() => setMenuOpen(false)}
                >
                  Specs
                </Link>
              </div>
            )}

            <button
              className={styles.menuButton}
              onClick={() => setMenuOpen(!menuOpen)}
            >
              {menuOpen ? (
                <svg
                  width="14"
                  height="13"
                  viewBox="0 0 14 13"
                  fill="none"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <rect
                    x="2.05029"
                    width="16"
                    height="2"
                    transform="rotate(45 2.05029 0)"
                    fill="currentColor"
                  />
                  <rect
                    width="16"
                    height="2"
                    transform="matrix(-0.707107 0.707107 0.707107 0.707107 11.9497 0)"
                    fill="currentColor"
                  />
                </svg>
              ) : (
                <svg
                  width="16"
                  height="14"
                  viewBox="0 0 16 14"
                  fill="none"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <rect width="16" height="2" fill="currentColor" />
                  <rect y="6" width="16" height="2" fill="currentColor" />
                  <rect y="12" width="16" height="2" fill="currentColor" />
                </svg>
              )}
            </button>
          </div>
          <div className={clsx(styles.menu, menuOpen && styles.open)}>
            <ul>
              <li>
                <Link onClick={() => setMenuOpen(false)} href="/about">
                  About
                </Link>
              </li>
              {/* <li>
                <Link href="/about">Salt & Pepper Guide</Link>
              </li> */}
              <li>
                <Link onClick={() => setMenuOpen(false)} href="/manual">
                  User Manual & How-Toâ€™s
                </Link>
              </li>
              <li>
                <Link onClick={() => setMenuOpen(false)} href="/faq">
                  FAQ
                </Link>
              </li>
              <li>
                <Link onClick={() => setMenuOpen(false)} href="/contact">
                  Contact
                </Link>
              </li>
            </ul>

            <div className={styles.socials}>
              <a href="https://www.instagram.com/crust.mill" target="_blank">
                <svg
                  width="16"
                  height="16"
                  viewBox="0 0 16 16"
                  fill="none"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <g clip-path="url(#clip0_503_1441)">
                    <path
                      d="M4.68673 0.0559501C3.83553 0.0961101 3.25425 0.23195 2.74609 0.43163C2.22017 0.63659 1.77441 0.91163 1.33089 1.35675C0.887373 1.80187 0.614253 2.24795 0.410733 2.77467C0.213773 3.28395 0.080333 3.86571 0.042733 4.71739C0.00513298 5.56907 -0.00318703 5.84283 0.000972972 8.01531C0.00513297 10.1878 0.014733 10.4601 0.056013 11.3135C0.096653 12.1646 0.232013 12.7457 0.431693 13.254C0.636973 13.7799 0.911693 14.2255 1.35697 14.6692C1.80225 15.1129 2.24801 15.3854 2.77601 15.5892C3.28481 15.7859 3.86673 15.9199 4.71825 15.9572C5.56977 15.9945 5.84385 16.0031 8.01569 15.999C10.1875 15.9948 10.461 15.9852 11.3143 15.9447C12.1675 15.9043 12.7456 15.7679 13.2541 15.5692C13.78 15.3635 14.2259 15.0892 14.6693 14.6438C15.1127 14.1983 15.3856 13.7519 15.589 13.2249C15.7861 12.7161 15.92 12.1342 15.957 11.2833C15.9943 10.4294 16.0031 10.1567 15.9989 7.98459C15.9947 5.81243 15.985 5.54011 15.9445 4.68699C15.904 3.83387 15.7685 3.25451 15.569 2.74587C15.3634 2.21995 15.089 1.77467 14.6439 1.33067C14.1987 0.88667 13.752 0.61387 13.2251 0.41099C12.716 0.21403 12.1344 0.0797901 11.2829 0.0429901C10.4314 0.00619009 10.1573 -0.00324991 7.98465 0.000910089C5.81201 0.00507009 5.54001 0.0143501 4.68673 0.0559501ZM4.78017 14.518C4.00017 14.4841 3.57665 14.3545 3.29441 14.246C2.92065 14.102 2.65441 13.9279 2.37313 13.6494C2.09185 13.3708 1.91905 13.1036 1.77313 12.7307C1.66353 12.4484 1.53153 12.0254 1.49505 11.2454C1.45537 10.4023 1.44705 10.1492 1.44241 8.01339C1.43777 5.87755 1.44593 5.62475 1.48289 4.78139C1.51617 4.00203 1.64657 3.57803 1.75489 3.29595C1.89889 2.92171 2.07233 2.65595 2.35153 2.37483C2.63073 2.09371 2.89713 1.92059 3.27041 1.77467C3.55233 1.66459 3.97537 1.53371 4.75505 1.49659C5.59873 1.45659 5.85153 1.44859 7.98705 1.44395C10.1226 1.43931 10.376 1.44731 11.22 1.48443C11.9994 1.51835 12.4235 1.64747 12.7053 1.75643C13.0792 1.90043 13.3453 2.07339 13.6264 2.35307C13.9075 2.63275 14.0808 2.89819 14.2267 3.27227C14.337 3.55339 14.4679 3.97627 14.5047 4.75643C14.5448 5.60011 14.5539 5.85307 14.5578 7.98843C14.5616 10.1238 14.5541 10.3774 14.5171 11.2204C14.4831 12.0004 14.3538 12.4241 14.2451 12.7067C14.1011 13.0803 13.9275 13.3467 13.6482 13.6276C13.3688 13.9086 13.1027 14.0817 12.7293 14.2276C12.4477 14.3375 12.0242 14.4687 11.2451 14.5059C10.4015 14.5455 10.1487 14.5539 8.01233 14.5585C5.87601 14.5631 5.62401 14.5545 4.78033 14.518M11.3019 3.72427C11.3022 3.91415 11.3589 4.09968 11.4646 4.25738C11.5704 4.41508 11.7206 4.53788 11.8961 4.61023C12.0717 4.68259 12.2647 4.70126 12.4509 4.66388C12.6371 4.62651 12.808 4.53476 12.942 4.40024C13.076 4.26573 13.1671 4.09449 13.2038 3.90819C13.2405 3.72188 13.2212 3.52888 13.1482 3.35359C13.0751 3.1783 12.9518 3.0286 12.7937 2.92341C12.6356 2.81823 12.4499 2.76229 12.26 2.76267C12.0055 2.76318 11.7615 2.86477 11.5819 3.04509C11.4022 3.22542 11.3015 3.46972 11.3019 3.72427ZM3.89233 8.00795C3.89681 10.2767 5.73937 12.1118 8.00769 12.1075C10.276 12.1031 12.1123 10.2607 12.108 7.99195C12.1037 5.72315 10.2607 3.88763 7.99201 3.89211C5.72337 3.89659 3.88801 5.73947 3.89233 8.00795ZM5.33329 8.00507C5.33225 7.47764 5.48763 6.96175 5.77979 6.52263C6.07194 6.08352 6.48775 5.74089 6.97462 5.53809C7.4615 5.33529 7.99759 5.28142 8.51508 5.38329C9.03258 5.48516 9.50824 5.7382 9.88193 6.11041C10.2556 6.48262 10.5105 6.95728 10.6145 7.47436C10.7184 7.99145 10.6666 8.52774 10.4658 9.01542C10.2649 9.5031 9.92391 9.92026 9.48595 10.2142C9.04799 10.508 8.53272 10.6655 8.00529 10.6665C7.65508 10.6672 7.30816 10.599 6.98433 10.4656C6.66051 10.3323 6.36612 10.1364 6.118 9.88927C5.86987 9.64213 5.67286 9.34852 5.53822 9.02523C5.40358 8.70193 5.33394 8.35528 5.33329 8.00507Z"
                      fill="#4D4E50"
                    />
                  </g>
                  <defs>
                    <clipPath id="clip0_503_1441">
                      <rect width="16" height="16" fill="white" />
                    </clipPath>
                  </defs>
                </svg>
                Instagram
              </a>
              <a href="https://x.com/crust_mill" target="_blank">
                <svg
                  width="16"
                  height="16"
                  viewBox="0 0 16 16"
                  fill="none"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <g clip-path="url(#clip0_503_1443)">
                    <path
                      d="M9.52217 6.77143L15.4785 0H14.0671L8.89516 5.87954L4.76437 0H0L6.24656 8.8909L0 15.9918H1.41155L6.87321 9.78279L11.2356 15.9918H16L9.52183 6.77143H9.52217ZM7.58887 8.96923L6.95596 8.0839L1.92015 1.03921H4.0882L8.15216 6.7245L8.78507 7.60983L14.0677 14.9998H11.8997L7.58887 8.96957V8.96923Z"
                      fill="#4D4E50"
                    />
                  </g>
                  <defs>
                    <clipPath id="clip0_503_1443">
                      <rect width="16" height="16" fill="white" />
                    </clipPath>
                  </defs>
                </svg>
                X (Twitter)
              </a>
            </div>
          </div>
        </Wrapper>
      </nav>
      <div
        className={clsx(styles.backdrop, menuOpen && styles.open)}
        onClick={() => setMenuOpen(false)}
      />
    </>
  );
}
